services:
  # MongoDB Database
  mongo:
    image: mongo:7
    container_name: mongo-crud-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: crud_api
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - crud_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Node.js API Application
  api:
    build: .
    container_name: mongo-crud-api
    restart: unless-stopped
    environment:
      MONGODB_URI: mongodb://mongo:27017/crud_api
      PORT: 3000
      NODE_ENV: production
    ports:
      - "3001:3000"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - crud_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # React Frontend Application
  frontend:
    build: ./frontend
    container_name: mongo-crud-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:3001
    ports:
      - "3002:3000"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - crud_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mongo_data:
    driver: local

networks:
  crud_network:
    driver: bridge
